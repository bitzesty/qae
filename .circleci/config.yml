version: 2
jobs:
  build:
    working_directory: /dev/shm/project
    docker:
      - image: circleci/ruby:2.5.0-node-browsers
        environment:
          PGHOST: 127.0.0.1
          PGUSER: root
      - image: circleci/postgres:9.6-alpine-ram
        command: -c fsync=off -c full_page_writes=off
        network_mode: host
        volumes:
          - "/dev/shm/pg_${PG_PORT}:/var/lib/postgresql/data"
        environment:
          PG_PORT: 5432
          POSTGRES_USER: root
          POSTGRES_DB: circle_ruby_test
      - image: redis:3.2.7
    parallelism: 1
    steps:
      - checkout

      # Restore bundle cache
      - restore_cache:
          keys:
            - qae-{{ checksum "Gemfile.lock" }}
            - qae-

      - run:
          name: Bundle install
          command: |
            bundle check --path=/home/circleci/project/vendor/bundle || bundle install --path=/home/circleci/project/vendor/bundle --jobs 4 --retry 3
            ln -s /home/circleci/project/vendor /dev/shm/project/vendor

      - run:
          name: Install PostgreSQL Client
          command: |
            sudo apt-get update
            sudo apt-get install -y postgresql-client

      # Store bundle cache
      - save_cache:
          key: qae-{{ checksum "Gemfile.lock" }}
          paths:
            - /home/circleci/project/vendor/bundle

      - run:
          name: Wait for DB
          command: dockerize -wait tcp://localhost:5432 -timeout 1m

      - run:
          name: Wait for redis
          command: dockerize -wait tcp://localhost:6379 -timeout 1m

      - run:
          name: Create & Migrate data
          command: |
            RAILS_ENV=test bundle exec rake db:create db:migrate

      - run:
          name: Run RSpec
          command: |
              RAILS_ENV=test RAILS_DISABLE_TEST_LOG=true bundle exec rspec spec/ --tag '~skip_ci' \
              --format RspecJunitFormatter --out /tmp/test-results/rspec.xml \
              --format progress

      - store_test_results:
          path: /tmp/test-results
      - store_artifacts:
          path: /tmp/test-results

      - store_artifacts:
          path: coverage/.resultset.json
          prefix: coverage # must be called coverage to be picked up by the report_coverage script
      - deploy:
          name: Merge and copy coverage data
          command: bundle exec report_coverage

  convox-deploy-dev:
    docker:
      - image: circleci/buildpack-deps:stretch-curl
    steps:
      - checkout
      - run:
          name: Download convox
          command: curl -Ls https://convox.com/cli/linux/convox > /tmp/convox
      - run:
          name: Install convox
          command: sudo mv /tmp/convox /usr/local/bin/convox
      - run:
          name: Set convox permissions
          command: sudo chmod 755 /usr/local/bin/convox
      - run:
          name: Login to convox
          command: convox login console.convox.com
      - run:
          name: Select the convox rack for QAE
          command: convox switch bitzesty/qae
      - run:
          name: Print convox version
          command: convox -v
      - run:
          name: Convox deploy
          command: convox deploy --app qae-dev
          no_output_timeout: 900s
      - run: convox run web rake db:migrate --app qae-dev
  convox-deploy-staging:
    docker:
      - image: circleci/buildpack-deps:stretch-curl
    steps:
      - checkout
      - run:
          name: Download convox
          command: curl -Ls https://convox.com/cli/linux/convox > /tmp/convox
      - run:
          name: Install convox
          command: sudo mv /tmp/convox /usr/local/bin/convox
      - run:
          name: Set convox permissions
          command: sudo chmod 755 /usr/local/bin/convox
      - run:
          name: Login to convox
          command: convox login console.convox.com
      - run:
          name: Select the convox rack for QAE
          command: convox switch bitzesty/qae
      - run:
          name: Print convox version
          command: convox -v
      - run:
          name: Convox deploy
          command: convox deploy --app qae-staging
          no_output_timeout: 900s
      - run: convox run web rake db:migrate --app qae-staging

  convox-deploy-production:
    docker:
      - image: circleci/buildpack-deps:stretch-curl
    steps:
      - checkout
      - run:
          name: Download convox
          command: curl -Ls https://convox.com/cli/linux/convox > /tmp/convox
      - run:
          name: Install convox
          command: sudo mv /tmp/convox /usr/local/bin/convox
      - run:
          name: Set convox permissions
          command: sudo chmod 755 /usr/local/bin/convox
      - run:
          name: Login to convox
          command: convox login console.convox.com
      - run:
          name: Select the convox rack for QAE
          command: convox switch bitzesty/qae
      - run:
          name: Print convox version
          command: convox -v
      - run:
          name: Convox deploy
          command: convox deploy --app qae-production
          no_output_timeout: 900s
      - run: convox run web rake db:migrate --app qae-production

workflows:
  version: 2
  build-and-deploy:
    jobs:
      - build
      - convox-deploy-dev:
          requires:
            - build
          filters:
            branches:
              only: master
      - convox-deploy-staging:
          requires:
            - build
          filters:
            branches:
              only: staging
      - convox-deploy-production:
          requires:
            - build
          filters:
            branches:
              only: production
