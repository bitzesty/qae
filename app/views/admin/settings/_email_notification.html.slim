- notifications = @email_notifications.select { |n| n.kind == kind }
- notifications = EmailNotificationDecorator.decorate_collection(notifications)

.panel-section[id="email_notification_#{kind}" data-controller="element-focus"]
  p
    = I18n.t("email_notification_headers.#{kind}")

    span.email-notification-help
      - if (help_message = t("email_notification_help_messages.#{kind}", default: "")).present?
        span.glyphicon-info-sign.help-message role="tooltip" aria-label=help_message
          span.help-message-text
            = help_message

  p
    = link_to "View email example", "#", class: "link-email-example if-no-js-hide", role: "button", aria: {label: "View #{I18n.t("email_buttons.#{kind}")} example"}

  .email-example.well
    = MailRenderer.new.public_send(kind)

  = link_to "+ Schedule new email", "#", class: "btn btn-default btn-add-schedule if-no-js-hide", role: "button", aria: {label: "Schedule #{I18n.t("email_buttons.#{kind}")}"}, data: { element_focus_target: "reveal" }

  div[data-controller="inline-flash"]
    .notification-form
      = render "schedule_new", notification: @settings.email_notifications.build(kind: kind), kind: kind

    ul.notifications
      - notifications.each do |notification|
        = render "notification", notification: notification.decorate
