- question.rendering_sub_fields.each do |sub_field_block|
  - sub_field_key = sub_field_block[0]
  - sub_field_title = sub_field_block[1]

  - case sub_field_key
  - when :building
    .question-group
      label for="q_#{question.key}_line_1"
        ' Building and
      label for="q_#{question.key}_line_2"
        ' street
      ul.errors-container
      input.large.js-trigger-autosave.required type="text" name=question.input_name(suffix: 'building') value=question.input_value(suffix: 'building') autocomplete="off"  id="q_#{question.key}_line_1" *possible_read_only_ops
      input.large.js-trigger-autosave.required type="text" name=question.input_name(suffix: 'street') value=question.input_value(suffix: 'street') autocomplete="off" id="q_#{question.key}_line_2" *possible_read_only_ops
  - when :country
    .question-group
      label
        ' Country
        = country_select(question.step.form.form_name, "#{question.key}_country", {priority_countries: ["GB", "US"], selected: question.input_value(suffix: 'country')}, possible_read_only_ops.merge({name: question.input_name(suffix: 'country'), class: 'js-trigger-autosave required', required: true}))

  - when :county
    .question-group.question-required
      label
        ' County
        = select_tag("#{question.key}_county", options_for_select(question.counties, question.input_value(suffix: 'county')), possible_read_only_ops.merge({name: question.input_name(suffix: 'county'), class: 'js-trigger-autosave required', include_blank: true}))
        ul.errors-container

  - else
    .question-group
      label
        = sub_field_title
        ul.errors-container
        input.js-trigger-autosave.required class="#{sub_field_title.parameterize == 'postcode' ? 'small' : 'medium'}" type="text" name=question.input_name(suffix: sub_field_key) value=question.input_value(suffix: sub_field_key) autocomplete="off" *possible_read_only_ops
