div role="group" id="q_#{question.key}"
  - question.rendering_sub_fields.each do |sub_field_block|
    - sub_field_key = sub_field_block[0]
    - sub_field_title = sub_field_block[1]

    - case sub_field_key
    - when :title
      .govuk-form-group
        label.govuk-label for="q_#{question.key}_title"
          ' Title
        - if @form_answer.validator_errors&.dig(question.hash_key(suffix: "title"))
          span.govuk-error-message
            span.govuk-visually-hidden id="error_for_title"
              | Error:
            = @form_answer.validator_errors[question.hash_key(suffix: "title")]
        span.govuk-error-message
        input.govuk-input.govuk-input--width-10.js-trigger-autosave.required type="text" name=question.input_name(suffix: 'title') value=question.input_value(suffix: 'title') autocomplete="off"  id="q_#{question.key}_title" *possible_read_only_ops aria-describedby=(@form_answer.validator_errors && @form_answer.validator_errors[question.hash_key] ? "error_for_title" : nil )
    - when :first_name
      .govuk-form-group
        label.govuk-label for="q_#{question.key}_first_name"
          ' First name
        - if @form_answer.validator_errors&.dig(question.hash_key(suffix: "first_name"))
          span.govuk-error-message
            span.govuk-visually-hidden id="error_for_first_name"
              | Error:
            = @form_answer.validator_errors[question.hash_key(suffix: "first_name")]
        span.govuk-error-message
        input.govuk-input.govuk-input--width-10.js-trigger-autosave type="text" name=question.input_name(suffix: 'first_name') value=question.input_value(suffix: 'first_name') autocomplete="off" id="q_#{question.key}_first_name" *possible_read_only_ops aria-describedby=(@form_answer.validator_errors && @form_answer.validator_errors[question.hash_key] ? "error_for_first_name" : nil )
    - when :last_name
      .govuk-form-group
        label.govuk-label for="q_#{question.key}_last_name"
          ' Last name
        - if @form_answer.validator_errors&.dig(question.hash_key(suffix: "last_name"))
          span.govuk-error-message
            span.govuk-visually-hidden id="error_for_last_name"
              | Error:
            = @form_answer.validator_errors[question.hash_key(suffix: "last_name")]
        span.govuk-error-message
        input.govuk-input.govuk-input--width-10.js-trigger-autosave type="text" name=question.input_name(suffix: 'last_name') value=question.input_value(suffix: 'last_name') autocomplete="off" id="q_#{question.key}_last_name" *possible_read_only_ops aria-describedby=(@form_answer.validator_errors && @form_answer.validator_errors[question.hash_key] ? "error_for_last_name" : nil )
      div class="govuk-!-margin-bottom-3"
        label.govuk-label for="q_#{question.key}_honours"
          ' Personal Honours (optional)
        span.govuk-hint
          ' e.g. OBE (Not including educational qualifications or institutional memberships.)
        input.govuk-input.govuk-input--width-10.js-trigger-autosave type="text" name=question.input_name(suffix: 'honours') value=question.input_value(suffix: 'honours') autocomplete="off" id="q_#{question.key}_honours" *possible_read_only_ops
    - when :job_title
      .govuk-form-group
        label.govuk-label for="q_#{question.key}_job_title"
          ' Job title / role in the organisation
        span.govuk-hint
          ' e.g. CEO, Managing Director, Founder
        - if @form_answer.validator_errors&.dig(question.hash_key(suffix: "job_title"))
          span.govuk-error-message
            span.govuk-visually-hidden id="error_for_job_title"
              | Error:
            = @form_answer.validator_errors[question.hash_key(suffix: "job_title")]
        span.govuk-error-message
        input.govuk-input.govuk-input--width-10.js-trigger-autosave type="text" name=question.input_name(suffix: 'job_title') value=question.input_value(suffix: 'job_title') autocomplete="off" id="q_#{question.key}_job_title" *possible_read_only_ops aria-describedby=(@form_answer.validator_errors && @form_answer.validator_errors[question.hash_key] ? "error_for_job_title" : nil )
    - else
      .govuk-form-group
        label.govuk-label for=question.input_name(suffix: sub_field_key) value=question.input_value(suffix: sub_field_key)
          = sub_field_title
        - if @form_answer.validator_errors&.dig(question.hash_key(suffix: sub_field_key))
          span.govuk-error-message
            span.govuk-visually-hidden id="error_for_#{sub_field_key}"
              | Error:
            =< @form_answer.validator_errors[question.hash_key(suffix: sub_field_key)]
        span.govuk-error-message
        .clear

        - klass = "govuk-input--width-10"
        - klass <<(QAEFormBuilder::HeadOfBusinessQuestionValidator::NO_VALIDATION_SUB_FIELDS.exclude?(sub_field_key) ? " required" : " not-required")
        input.govuk-input.js-trigger-autosave class=klass type="text" id=question.input_name(suffix: sub_field_key) value=question.input_value(suffix: sub_field_key) name=question.input_name(suffix: sub_field_key) autocomplete="off" *possible_read_only_ops aria-describedby=(@form_answer.validator_errors && @form_answer.validator_errors[question.hash_key] ? "error_for_#{sub_field_key}" : nil )
