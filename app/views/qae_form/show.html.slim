- provide(:page_wrapper_class, "page-award-form #{'page-read-only-form' if current_form_is_not_editable?}")

- if application_collaborator_group_mode?
  - provide(:body_end) do
    .js-collaborators-bar.hidden

// Don't think that this textarea is smth wrong
// We use it in order to fix CKeditor plugins issue
// CKeditor in version 4 doesn't apply plugins init for first
// textarea in list
// so that first textarea in form would not be inited with 'wordscount' and 'onchange' plugins
//
.hidden
  textarea.js-ckeditor

form.qae-form.award-form data-autosave-url=save_form_url(@form_answer) action=save_form_url(@form_answer, next_step: next_step(@form, params[:step]), current_step: params[:step]) method="POST" data-attachments-url=attachments_url(@form_answer) novalidate=true

  input name="authenticity_token" type="hidden" value=form_authenticity_token

  = hidden_field_tag :current_step_id, (params[:step].present? ? params[:step] : @form.steps.first.title.parameterize)

  header.page-header.group.page-header-over-sidebar
    div
      h1
        = @form.title

  .steps-progress-container.min-height-800
    .steps-progress-content
      - if @form_answer.promotion? && @form_answer.validator_errors && @form_answer.validator_errors["supporters"].present?
        article.group role="article"
          .inner
            .errors-box.letters-of-support-error
              h3 There was a problem submitting the form
              p
                ' You need to request or upload at least 2 letters of support.
              p
                = link_to "Add more letters of support", form_form_answer_supporters_path(@form_answer)

      = render 'qae_form/form_header', form: @form, current_step: params[:step]
      = render partial: 'qae_form/step', collection: @form.steps, locals: {form: @form, answers: (HashWithIndifferentAccess.new(@form_answer.document || {})), attachments: HashWithIndifferentAccess.new(@attachments)}

      = render "qae_form/step_error"

    = render "qae_form/steps_progress_bar", current_step: params[:step]

- if application_collaborator_group_mode?
  = content_for(:javascript_code) do
    | ApplicationCollaboratorsConnectionManager.init('#{@form_answer.id}', '#{Pusher.host}', #{Pusher.port}, '#{Pusher.key}', '#{Rails.env}', #{Time.now.utc.to_i});
