- title "User: Create an account"

- provide(:page_wrapper_class, "page-devise")

.article-related-positioning-container
  header.page-header.group
    div
      h1 Create an account

  .article-container.group
    article.group role="article"
      .inner
        .application-notice.info-notice
          p
            ' If you are a marketing company applying on behalf of a client, your client should create an account first, then add you as a collaborator.
          p
            = I18n.t(:custom_login_messages)[:already_have_account]
            =< link_to "sign in page", new_user_session_path
            '.
        = simple_form_for(resource, as: resource_name, url: registration_path(resource_name)) do |f|

          .form-inputs#email-control-group
            .question
              h2 = f.label :email
              .question-body class="#{'no-error' if signup_email_already_exists?(f.object)}"
                = f.input :email, required: true, autofocus: true, label: false, input_html: {autocomplete: "off", class: "large"}, error: !signup_email_already_exists?(f.object)

              - if signup_email_already_exists?(f.object)
                .guidance-panel.account-notice
                  .application-notice.help-notice
                    .alert.alert-warning
                      p.text-underline
                        = I18n.t(:custom_login_messages)[:already_have_account_short]
                      p.text-normal
                        ' Please use
                        = link_to "sign in page", new_user_session_path
                        ' .

          #password-change-panel
            .form-inputs-group
              #password-control-group
                .form-inputs
                  .question
                    h2 = f.label :password
                    .question-body
                      = f.input :password,
                                required: true,
                                label: false,
                                hint: ("#{@minimum_password_length} characters minimum" if @validatable),
                                input_html: { class: "password-strength-meter js-disable-copy medium", "data-min-password-length" => "10" }
                      span#password-result-span.input-group-addon
                        i#password-result.glyphicon.glyphicon-ok

              .guidance-panel.if-no-js-hide
                #password-guidance.application-notice.help-notice
                  .alert.alert-warning
                    p.text-underline Please improve your password
                    p#password-too-short
                      ' It must be at least 10 characters.
                    p#parts-of-email It shouldn't include part or all of your email address.
                    p#password-entropy
                      ' It must be more complex. Consider using whole sentences (with spaces), lyrics or phrases to make it more memorable.

              #password-confirmation-control-group
                .form-inputs
                  .question
                    h2 = f.label :password_confirmation, label: "Password confirmation"
                    .question-body
                      = f.input :password_confirmation, required: true, label: false, input_html: { class: "js-disable-copy medium" }
                      span#password-confirmation-result-span.input-group-addon
                        i#password-confirmation-result.glyphicon.glyphicon-ok

              .if-no-js-hide
                #password-confirmation-guidance.application-notice.help-notice
                  .alert.alert-warning
                    p#password-confirmation-match The confirmation must match the password

          .form-inputs
            .question
              .question-body
                label.selectable
                  = f.error :agreed_with_privacy_policy
                  = f.input :agreed_with_privacy_policy, as: :boolean, label: "I have read and accepted the #{link_to 'terms and conditions of the privacy statement', privacy_path, target: '_blank'}".html_safe

          .form-actions
            = f.button :submit, "Create account", class: "button large"

        /= render "users/shared/links"
